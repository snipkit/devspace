// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "dev.khulnasoft.com/api/pkg/apis/storage/v1"
	scheme "dev.khulnasoft.com/api/pkg/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DevSpaceWorkspaceInstancesGetter has a method to return a DevSpaceWorkspaceInstanceInterface.
// A group's client should implement this interface.
type DevSpaceWorkspaceInstancesGetter interface {
	DevSpaceWorkspaceInstances(namespace string) DevSpaceWorkspaceInstanceInterface
}

// DevSpaceWorkspaceInstanceInterface has methods to work with DevSpaceWorkspaceInstance resources.
type DevSpaceWorkspaceInstanceInterface interface {
	Create(ctx context.Context, devSpaceWorkspaceInstance *v1.DevSpaceWorkspaceInstance, opts metav1.CreateOptions) (*v1.DevSpaceWorkspaceInstance, error)
	Update(ctx context.Context, devSpaceWorkspaceInstance *v1.DevSpaceWorkspaceInstance, opts metav1.UpdateOptions) (*v1.DevSpaceWorkspaceInstance, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.DevSpaceWorkspaceInstance, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.DevSpaceWorkspaceInstanceList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.DevSpaceWorkspaceInstance, err error)
	DevSpaceWorkspaceInstanceExpansion
}

// devSpaceWorkspaceInstances implements DevSpaceWorkspaceInstanceInterface
type devSpaceWorkspaceInstances struct {
	*gentype.ClientWithList[*v1.DevSpaceWorkspaceInstance, *v1.DevSpaceWorkspaceInstanceList]
}

// newDevSpaceWorkspaceInstances returns a DevSpaceWorkspaceInstances
func newDevSpaceWorkspaceInstances(c *StorageV1Client, namespace string) *devSpaceWorkspaceInstances {
	return &devSpaceWorkspaceInstances{
		gentype.NewClientWithList[*v1.DevSpaceWorkspaceInstance, *v1.DevSpaceWorkspaceInstanceList](
			"devspaceworkspaceinstances",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1.DevSpaceWorkspaceInstance { return &v1.DevSpaceWorkspaceInstance{} },
			func() *v1.DevSpaceWorkspaceInstanceList { return &v1.DevSpaceWorkspaceInstanceList{} }),
	}
}
