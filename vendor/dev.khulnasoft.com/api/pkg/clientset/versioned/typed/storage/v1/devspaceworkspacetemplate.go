// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "dev.khulnasoft.com/api/pkg/apis/storage/v1"
	scheme "dev.khulnasoft.com/api/pkg/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DevSpaceWorkspaceTemplatesGetter has a method to return a DevSpaceWorkspaceTemplateInterface.
// A group's client should implement this interface.
type DevSpaceWorkspaceTemplatesGetter interface {
	DevSpaceWorkspaceTemplates() DevSpaceWorkspaceTemplateInterface
}

// DevSpaceWorkspaceTemplateInterface has methods to work with DevSpaceWorkspaceTemplate resources.
type DevSpaceWorkspaceTemplateInterface interface {
	Create(ctx context.Context, devSpaceWorkspaceTemplate *v1.DevSpaceWorkspaceTemplate, opts metav1.CreateOptions) (*v1.DevSpaceWorkspaceTemplate, error)
	Update(ctx context.Context, devSpaceWorkspaceTemplate *v1.DevSpaceWorkspaceTemplate, opts metav1.UpdateOptions) (*v1.DevSpaceWorkspaceTemplate, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, devSpaceWorkspaceTemplate *v1.DevSpaceWorkspaceTemplate, opts metav1.UpdateOptions) (*v1.DevSpaceWorkspaceTemplate, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.DevSpaceWorkspaceTemplate, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.DevSpaceWorkspaceTemplateList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.DevSpaceWorkspaceTemplate, err error)
	DevSpaceWorkspaceTemplateExpansion
}

// devSpaceWorkspaceTemplates implements DevSpaceWorkspaceTemplateInterface
type devSpaceWorkspaceTemplates struct {
	*gentype.ClientWithList[*v1.DevSpaceWorkspaceTemplate, *v1.DevSpaceWorkspaceTemplateList]
}

// newDevSpaceWorkspaceTemplates returns a DevSpaceWorkspaceTemplates
func newDevSpaceWorkspaceTemplates(c *StorageV1Client) *devSpaceWorkspaceTemplates {
	return &devSpaceWorkspaceTemplates{
		gentype.NewClientWithList[*v1.DevSpaceWorkspaceTemplate, *v1.DevSpaceWorkspaceTemplateList](
			"devspaceworkspacetemplates",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1.DevSpaceWorkspaceTemplate { return &v1.DevSpaceWorkspaceTemplate{} },
			func() *v1.DevSpaceWorkspaceTemplateList { return &v1.DevSpaceWorkspaceTemplateList{} }),
	}
}
