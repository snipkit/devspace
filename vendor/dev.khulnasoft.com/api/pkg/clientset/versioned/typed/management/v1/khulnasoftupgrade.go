// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "dev.khulnasoft.com/api/pkg/apis/management/v1"
	scheme "dev.khulnasoft.com/api/pkg/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// KhulnasoftUpgradesGetter has a method to return a KhulnasoftUpgradeInterface.
// A group's client should implement this interface.
type KhulnasoftUpgradesGetter interface {
	KhulnasoftUpgrades() KhulnasoftUpgradeInterface
}

// KhulnasoftUpgradeInterface has methods to work with KhulnasoftUpgrade resources.
type KhulnasoftUpgradeInterface interface {
	Create(ctx context.Context, khulnasoftUpgrade *v1.KhulnasoftUpgrade, opts metav1.CreateOptions) (*v1.KhulnasoftUpgrade, error)
	Update(ctx context.Context, khulnasoftUpgrade *v1.KhulnasoftUpgrade, opts metav1.UpdateOptions) (*v1.KhulnasoftUpgrade, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, khulnasoftUpgrade *v1.KhulnasoftUpgrade, opts metav1.UpdateOptions) (*v1.KhulnasoftUpgrade, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.KhulnasoftUpgrade, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.KhulnasoftUpgradeList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.KhulnasoftUpgrade, err error)
	KhulnasoftUpgradeExpansion
}

// khulnasoftUpgrades implements KhulnasoftUpgradeInterface
type khulnasoftUpgrades struct {
	*gentype.ClientWithList[*v1.KhulnasoftUpgrade, *v1.KhulnasoftUpgradeList]
}

// newKhulnasoftUpgrades returns a KhulnasoftUpgrades
func newKhulnasoftUpgrades(c *ManagementV1Client) *khulnasoftUpgrades {
	return &khulnasoftUpgrades{
		gentype.NewClientWithList[*v1.KhulnasoftUpgrade, *v1.KhulnasoftUpgradeList](
			"khulnasoftupgrades",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1.KhulnasoftUpgrade { return &v1.KhulnasoftUpgrade{} },
			func() *v1.KhulnasoftUpgradeList { return &v1.KhulnasoftUpgradeList{} }),
	}
}
